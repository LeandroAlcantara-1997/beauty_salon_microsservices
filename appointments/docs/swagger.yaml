basePath: /v1/appointment
definitions:
  model.AppResponse:
    properties:
      appointment_date:
        example: "2022-06-23T21:12:02.000000001Z"
        type: string
      id:
        example: 62b65300e1d7eab1ea9a681d
        type: string
      salon_id:
        example: 1
        type: integer
      user_id:
        example: 1
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: leandro1997silva97@gmail.com
    name: API Support
    url: https://github.com/LeandroAlcantara-1997
  description: This is a service for make appointments .
  license:
    name: MIT
    url: https://choosealicense.com/licenses/mit/
  termsOfService: http://swagger.io/terms/
  title: Appointment API
  version: "1.0"
paths:
  /appointment:
    get:
      consumes:
      - application/json
      description: Get all appointments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.AppResponse'
            type: array
        "404":
          description: Appointment not found
          schema:
            type: string
        "500":
          description: An error happened in database
          schema:
            type: string
      summary: Get all appointments
      tags:
      - appointment
  /appointment/{id}:
    delete:
      consumes:
      - application/json
      description: get string by ID and delete an appointment
      parameters:
      - description: Appointment ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Cannot read path
          schema:
            type: string
        "404":
          description: Appointment not found
          schema:
            type: string
        "500":
          description: An error happened in database
          schema:
            type: string
      summary: Delete appointments by id
      tags:
      - appointment
    put:
      consumes:
      - application/json
      description: Get Appointment by ID and body for update
      parameters:
      - description: Appointment ID
        in: path
        name: id
        required: true
        type: string
      - description: Appointment
        in: body
        name: appointment
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AppResponse'
        "400":
          description: Cannot read path
          schema:
            type: string
        "404":
          description: Appointment not found
          schema:
            type: string
        "500":
          description: An error happened in database
          schema:
            type: string
      summary: Update an appointment
      tags:
      - appointment
  /appointment/{id}/{user}:
    put:
      consumes:
      - application/json
      description: cancel appointment by ID and user id
      parameters:
      - description: Appointment ID
        in: path
        name: id
        required: true
        type: string
      - description: User ID
        in: path
        name: user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Cannot read path
          schema:
            type: string
        "404":
          description: Appointment not found
          schema:
            type: string
        "500":
          description: An error happened in database
          schema:
            type: string
      summary: Cancel an appointment
      tags:
      - appointment
  /appointment/available:
    get:
      consumes:
      - application/json
      description: get all available appointments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.AppResponse'
            type: array
        "404":
          description: Appointment not found
          schema:
            type: string
        "500":
          description: An error happened in database
          schema:
            type: string
      summary: Get available appointments
      tags:
      - appointment
  /appointment/salon/{id}:
    get:
      consumes:
      - application/json
      description: get by salon ID and return an appointment
      parameters:
      - description: Salon ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.AppResponse'
            type: array
        "400":
          description: Cannot read path
          schema:
            type: string
        "404":
          description: Appointment not found
          schema:
            type: string
        "500":
          description: An error happened in database
          schema:
            type: string
      summary: Get appointments by salon id
      tags:
      - appointment
  /appointment/user/{id}:
    get:
      consumes:
      - application/json
      description: Get by user ID and return an appointment
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.AppResponse'
            type: array
        "400":
          description: Cannot read path
          schema:
            type: string
        "404":
          description: Appointment not found
          schema:
            type: string
        "500":
          description: An error happened in database
          schema:
            type: string
      summary: Get appointments by user id
      tags:
      - appointment
swagger: "2.0"
